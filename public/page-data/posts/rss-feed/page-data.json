{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rss-feed","result":{"data":{"markdownRemark":{"id":"b59f28d2-93eb-58e1-8b5b-b75aeae4562d","html":"<h2 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>RSSはつかっていますか？RSSを使えば、ZennやQiita、その他企業の技術ブログの更新などを受け取ることなどができて便利です。</p>\n<p>ただ、毎日見るのにいろんなサイトを行ったり来たりしないとならず、面倒ですよね。\nFeedlyやSlackのRSSなどを使えば、まとめて素早くキャッチアップできるようになるのですが、これらのアプリは、情報過多や未対応のサイトがあるなどの辛みがあったようです。</p>\n<p>そこで、毎日決まった時間にSlackに様々な技術ブログのリンクを通知してくれるものを勉強がてらGoで作成しました。とりあえず今回はZennのトレンド記事を通知します。</p>\n<p>コードの詳細な挙動については詳しく触れないので、ハンズオン的な感覚で参考にしてください。</p>\n<h2 id=\"rssとは\" style=\"position:relative;\"><a href=\"#rss%E3%81%A8%E3%81%AF\" aria-label=\"rssとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RSSとは</h2>\n<p>RSSとは、Really Simple Syndicationの略で、Webサイトやブログなどの情報を配信するための技術のことで、xml形式で記載されています。\nエンジニアならば皆見ることがあるであろう、ZennやQiitaやはてなブログなども対応しています。</p>\n<p>こちらに様々な技術ブログのRSSがまとめられていたので紹介します。</p>\n<ul>\n<li><a href=\"https://note.com/manyamam/n/n05fc8f66886a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">技術・デザインブログのRSS/フィードを集めました</a></li>\n</ul>\n<h2 id=\"準備\" style=\"position:relative;\"><a href=\"#%E6%BA%96%E5%82%99\" aria-label=\"準備 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>準備</h2>\n<p>まずは、botをSlackに追加するためのIncomingURLを取得します。</p>\n<ul>\n<li><a href=\"https://slack.com/services/new/incoming-webhook\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://slack.com/services/new/incoming-webhook</a></li>\n</ul>\n<p>追加したいチャンネルとワークスペースを選択</p>\n<p><img src=\"https://gyazo.com/98be13a1db7c75f5f8ea93ad8187399c/raw\" alt=\"https://gyazo.com/98be13a1db7c75f5f8ea93ad8187399c\"></p>\n<h3 id=\"ソースコード\" style=\"position:relative;\"><a href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89\" aria-label=\"ソースコード permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ソースコード</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">package main\n\nimport (\n\t&quot;encoding/json&quot;\n\t&quot;log&quot;\n\t&quot;net/http&quot;\n\t&quot;net/url&quot;\n\t&quot;os&quot;\n\n\t&quot;github.com/mmcdole/gofeed&quot;\n\t&quot;github.com/robfig/cron&quot;\n)\n\ntype Slack struct {\n\tText      string `json:&quot;text&quot;`\n\tUsername  string `json:&quot;username&quot;`\n\tIconEmoji string `json:&quot;icon_emoji&quot;`\n}\n\nfunc main() {\n\t//ZennのrssフィードURL\n\tzenn := &quot;https://zenn.dev/feed&quot;\n\n\tfp := gofeed.NewParser()\n\tfeed, _ := fp.ParseURL(zenn)\n\n\titems := feed.Items\n\n\tIncomingURL := &#39;{取得したIncomingURL}&#39;\n\n\tc := cron.New()\n\tc.AddFunc(&quot;0 22 * * *&quot;, func() {\n\t\tparams := Slack{\n\t\t\tText:      &quot;今日のトレンド記事です！！&quot;,\n\t\t\tUsername:  &quot;Zenn bot&quot;,\n\t\t\tIconEmoji: &quot;:zenn:&quot;,\n\t\t}\n\t\tjsonparams, _ := json.Marshal(params)\n\t\tresp, _ := http.PostForm(\n\t\t\tIncomingURL,\n\t\t\turl.Values{&quot;payload&quot;: {string(jsonparams)}},\n\t\t)\n\t\tdefer resp.Body.Close()\n\t})\n\tc.AddFunc(&quot;0 22 * * *&quot;, func() {\n\t\tfor i, _ := range items {\n\t\t\tparams := Slack{\n\t\t\t\tText:      &quot;「&quot; + items[i].Title + &quot;」&quot; + &quot;\\n&quot; + items[i].Link + &quot;\\n&quot; + &quot;---------------------------------------&quot;,\n\t\t\t\tUsername:  &quot;鉄人28号&quot;,\n\t\t\t\tIconEmoji: &quot;:28:&quot;,\n\t\t\t}\n\n\t\t\tjsonparams, _ := json.Marshal(params)\n\t\t\tresp, _ := http.PostForm(\n\t\t\t\tIncomingURL,\n\t\t\t\turl.Values{&quot;payload&quot;: {string(jsonparams)}},\n\t\t\t)\n\t\t\tdefer resp.Body.Close()\n\t\t}\n\t})\n\n\tc.Start()\n\tdefer c.Stop()\n\n\tselect {}\n}</code></pre></div>\n<p>すると最終的にはSlackでこのように表示されるようになります。</p>\n<p><img src=\"https://gyazo.com/0d57cabb1bd9ba461693d243b81fb7dd/raw\" alt=\"https://gyazo.com/0d57cabb1bd9ba461693d243b81fb7dd\"></p>\n<p>Slack structを定義し、ここにbotの名前やアイコン、本文を割り当てていきます。\nこのあたりはいい感じに自分の見やすいようにすればいいと思います。</p>\n<p>ちなみに<code class=\"language-text\">IconEmoji</code>のところはSlackに追加している絵文字のコマンドです。</p>\n<h3 id=\"cron\" style=\"position:relative;\"><a href=\"#cron\" aria-label=\"cron permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cron</h3>\n<p>また今回はCronを使って毎日決まった時間に自動的に実行されるようにしたいので、<code class=\"language-text\">robfig/cron</code>を使用しています。\n<code class=\"language-text\">$ go get github.com/robfig/cron</code>を実行しておいてください。</p>\n<p>cronの時間指定については<a href=\"https://qiita.com/katsukii/items/d5f90a6e4592d1414f99\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">こちら</a>に詳しく載っています。\n私は、22時に通知が来るようにしたので上記のような時間指定をしています。</p>\n<p>ここまでできたら、<code class=\"language-text\">$ go build main.go</code>を実行してバイナリファイルを作成し、それをmacの「ユーザーとグループ -> ログイン項目」に追加しておけば定期的に実行されるようになります。（再起動する必要あり）</p>\n<h2 id=\"おわりに\" style=\"position:relative;\"><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\" aria-label=\"おわりに permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>おわりに</h2>\n<p>他のfeedURLをつかえば様々なサイトから記事を引っ張ってこれます。改良していけば、快適に記事をキャッチアップできそうです。</p>\n<p>今回作成したRepository</p>\n<ul>\n<li><a href=\"https://github.com/SHOOOOUT/rss-feed/edit/master/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SHOOOOUT/rss-feed</a></li>\n</ul>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://qiita.com/andromeda/items/028b1aed176c9412c27b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Slackに何か通知する</a></li>\n<li><a href=\"https://blog.withnic.net/2017/03/mac%E3%81%ABgolang%E3%81%AEcron%E3%82%92%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%A6%E4%BB%95%E4%BA%8B%E3%82%92%E3%81%AF%E3%81%8B%E3%81%A9%E3%82%89%E3%81%9B%E3%82%8B/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">macにGolangのcronを登録して仕事をはかどらせる</a></li>\n</ul>","fields":{"slug":"/posts/rss-feed","tagSlugs":["/tag/go/"]},"frontmatter":{"date":"2020-11-15T12:12:34.214Z","description":"zennのトレンド記事を毎日定時にSlackに通知するアプリをつくりました","tags":["Go"],"title":"RSSフィードで取得したデータを定期的にSlackで通知する","socialImage":{"publicURL":"/static/ec7e242a275dee1341819c1a3804b222/book4_red.png"}}}},"pageContext":{"slug":"/posts/rss-feed"}},"staticQueryHashes":["251939775","401334301","825871152"]}